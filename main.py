import asyncio
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from keys.config import TOKEN, TOKEN_TEST

from handlers import start, auth, forecast, notifications
from keyboards.menu import reboot_menu
from utils.storage import reboot_notifications, authorized_users

test = True
sendmessage = True
if not test:
    bot = Bot(token=TOKEN)
    dp = Dispatcher(storage=MemoryStorage())
else: 
    bot = Bot(token=TOKEN_TEST)
    dp = Dispatcher(storage=MemoryStorage())
# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(start.router)
dp.include_router(auth.router)
dp.include_router(forecast.router)
dp.include_router(notifications.router)


async def on_startup(bot: Bot):
    try:
        await bot.send_message(
                chat_id=166853396,
                text="‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω",
                reply_markup=reboot_menu
            )
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å master: {e}")
    if sendmessage:
        for user_id in authorized_users:
            try:
                await bot.send_message(
                    chat_id=user_id,
                    text='–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–µ—Ä–≤–æ–π –ø–æ–±–µ–¥–æ–π!\n'
                    '–í—ã–ª–æ–∂–∏–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–∞ –∏ –∑–æ–ª–æ—Ç—ã–µ –±–∞–ª–ª—ã.\n'
                    '–ü–æ –ø–æ–≤–æ–¥—É —Ç–∞–±–ª–∏—Ü "–¢–æ–ø-10" –∏ "–ü—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç—ã" –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–∑–¥–Ω–µ–µ. –•–æ—Ç–∏–º –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å–ø–∏—Å–∞—Ç—å –∫–∞–∫ –≤—Å—ë –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —ç—Ç–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö –∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ–±–Ω–∞—Ä–æ–¥—É–µ–º.\n'
                    'FORZA ROMA! ‚ù§Ô∏èüíõ\n\n'
                    '–ë–æ—Ç —Ç–æ–∂–µ –ø–æ–π–¥–µ—Ç –æ—Ç–¥–æ—Ö–Ω–µ—Ç)',
                    
                )
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {user_id}: {e}")  
    if False:
        for user_id in [key for key, value in reboot_notifications.items() if value == 'yes']:
            try:
                await bot.send_message(
                    chat_id=user_id,
                    text="‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω",
                    reply_markup=reboot_menu
                )
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {user_id}: {e}")
async def main():
    await on_startup(bot)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
