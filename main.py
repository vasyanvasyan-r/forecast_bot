import asyncio
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from keys.config import TOKEN, TOKEN_TEST
from aiogram.types import ReplyKeyboardRemove, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from handlers import start, auth, forecast, notifications
from keyboards.menu import reboot_menu
from utils.storage import reboot_notifications, authorized_users

test = False
sendmessage = True
if not test:
    bot = Bot(token=TOKEN)
    dp = Dispatcher(storage=MemoryStorage())
else: 
    bot = Bot(token=TOKEN_TEST)
    dp = Dispatcher(storage=MemoryStorage())
# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(start.router)
dp.include_router(auth.router)
dp.include_router(forecast.router)
dp.include_router(notifications.router)


async def on_startup(bot: Bot):
    try:
        await bot.send_message(
                chat_id=166853396,
                text="‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω",
                reply_markup=reboot_menu
            )
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å master: {e}")
    if sendmessage:
        for user_id in authorized_users:
            try:
                await bot.send_message(
                    chat_id=user_id,
                    text=(
                        "–ü—Ä–∏–≤–µ—Ç, –Ω–∞—à –¥–æ—Ä–æ–≥–æ–π <b>–ü—Ä–æ–≥–Ω–æ–∑–∏—Å—Ç</b>!\n"
                        "–ë–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –º–∞—Ç—á –ø—Ä–æ—Ç–∏–≤ –ú–∏–ª–∞–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –í–∞—à–∏ –ø—Ä–æ–≥–Ω–æ–∑—ã –ø–µ—Ä–µ—Å—Ç–∞—é—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å—Å—è —Ä–æ–≤–Ω–æ –∑–∞ 2 —á–∞—Å–∞ –¥–æ –Ω–∞—á–∞–ª–∞ –º–∞—Ç—á–∞.\n\n"

                        "–ü–æ—Å–ª–µ –º–∞—Ç—á–∞ –ø—Ä–æ—Ç–∏–≤ –°–∞—Å—Å—É–æ–ª–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç–æ–≤ –∏ –¢–æ–ø-10, –∏ —Ç–µ–ø–µ—Ä—å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∏—Å—Ç–æ–≤ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç, "
                        "–∫–∞–∫ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–æ—Å—å –≤ —Ä–µ–∂–∏–º '–¶–∞—Ä—è-–≥–æ—Ä—ã'. –¢–∞–∫–∂–µ —Ç–µ–ø–µ—Ä—å –≤ –¢–æ–ø-10 –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–∞–¥–∞–µ—Ç –∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –º–∞—Ç—á—É, –∞ –Ω–µ "
                        "—Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã <a href='https://docs.google.com/spreadsheets/d/1I7APxniANMu1r1y2uRGKDrLGuR4-OeUZDqvTtrn6vos/edit?gid=608044181#gid=608044181'>–ü—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç–æ–≤</a>. "
                        "–ü–æ–¥—Ä–æ–±–Ω–µ–µ —Å–º–æ—Ç—Ä–∏ –≤ –ì–∞–π–¥–µ\n\n"

                        "–í–æ—Ç –Ω–∞—à <a href='https://docs.google.com/document/d/1K7zAyX-6zEeMXGZAaAY59QjVyFsZpyNQgw1dZ4_dXBw/edit?tab=t.0'>–ì–∞–π–¥</a>\n"
                        "–í–æ—Ç –Ω–∞—à–∏ –¢–∞–±–ª–∏—Ü—ã <a href='https://docs.google.com/spreadsheets/d/1I7APxniANMu1r1y2uRGKDrLGuR4-OeUZDqvTtrn6vos/edit?gid=1893944730#gid=1893944730'>–ü—Ä–æ–≥–Ω–æ–∑–∏—Å—Ç–∞</a>\n"
                        "–í–æ—Ç –Ω–∞—à <a href='https://boosty.to/pro_asroma'>–ë—É—Å—Ç–∏</a>. –ë—É–¥–µ–º —Ä–∞–¥—ã, –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏—à—å –Ω–∞—Å –∏ –ø–æ—É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –ü—Ä–∏–∑–æ–≤–æ–º —Ñ–æ–Ω–¥–µ —ç—Ç–æ–≥–æ —Å–µ–∑–æ–Ω–∞ "
                        "(–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥ —Å–µ–π—á–∞—Å 1500 —Ä—É–±–ª–µ–π)\n\n"
                        "‚ù§Ô∏èüíõ"
                    ),
                    parse_mode="HTML",
                    reply_markup=ReplyKeyboardMarkup(
                        keyboard=[[KeyboardButton(text="–°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")]],
                        resize_keyboard=True
                    )
                )
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {user_id}: {e}")  

    for user_id in [key for key, value in reboot_notifications.items() if value == 'yes']:
        try:
            await bot.send_message(
                chat_id=user_id,
                text="‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω",
                reply_markup=reboot_menu
            )
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {user_id}: {e}")
async def main():
    await on_startup(bot)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
